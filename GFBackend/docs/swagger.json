{
    "swagger": "2.0",
    "info": {
        "description": "This is the Gator Forum Backend Server",
        "title": "Gator Forum Backend API",
        "termsOfService": "https://github.com/fongziyjun16/SE/tree/backend",
        "contact": {},
        "version": "1.0"
    },
    "host": "http://167.71.166.120:10010",
    "basePath": "/gf/api",
    "paths": {
        "/article/create": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need new article info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Manage"
                ],
                "summary": "Create a new article",
                "parameters": [
                    {
                        "description": "Create New Article",
                        "name": "ArticleInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ArticleInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Create Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters / Info Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/article/delete/:id": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need new article id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Manage"
                ],
                "summary": "Delete Article By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Delete Successfully no matter what",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/article/getarticlelist": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need page and page size",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Manage"
                ],
                "summary": "Get Article List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.Article"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters / Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/article/getarticlelistbycommunityid": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need page and page size",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Manage"
                ],
                "summary": "Get Article List By Community ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Community ID",
                        "name": "communityID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.Article"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters / Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/article/getone": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need ID, /getone?id=",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Manage"
                ],
                "summary": "Get One Article By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ArticleDetail"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters / Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/article/search": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need article search info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Manage"
                ],
                "summary": "Get Articles By Search Words",
                "parameters": [
                    {
                        "description": "Article ID",
                        "name": "ArticleSearchInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ArticleSearchInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ArticlesForSearching"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters / Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/article/update": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need ID, Title, Content in article info only",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Manage"
                ],
                "summary": "Update Article Title or Content By ID",
                "parameters": [
                    {
                        "description": "Update Article Info",
                        "name": "ArticleInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ArticleInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters / Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/articlecomment/create": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need new article comment info, if comment to article, no need CommentID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Comment Manage"
                ],
                "summary": "Create a new comment to article or comment",
                "parameters": [
                    {
                        "description": "Create New Comment",
                        "name": "ArticleInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.NewCommentInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Create Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters / Info Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/articlecomment/delete/:id": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need comment ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Comment Manage"
                ],
                "summary": "Delete a comment by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Delete Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters / Info Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/articlecomment/getbyarticleid": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need article id, pageno, pagesize in url: \"/articlecomment/getbyarticleid?id=\u0026pageno=\u0026pagesize=\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Comment Manage"
                ],
                "summary": "get direct comments by article id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PageNO",
                        "name": "pageno",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PageSize",
                        "name": "pagesize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Search Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ArticleCommentsInfo"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters / Info Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/articlecomment/getsub": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need article id, comment id, pageno, pagesize in url: \"/articlecomment/getbyarticleid?articleid=\u0026commentid=\u0026pageno=\u0026pagesize=\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Comment Manage"
                ],
                "summary": "get sub comments by article id and comment id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "commentid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PageNO",
                        "name": "pageno",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PageSize",
                        "name": "pagesize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Search Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ArticleCommentsInfo"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters / Info Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/articlefavorite/create/:articleID": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need article id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Favorite Manage"
                ],
                "summary": "User Favorite Article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "233333",
                        "name": "ArticleID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Create Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Not Found or Existed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/articlefavorite/delete/:articleID": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need article id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Favorite Manage"
                ],
                "summary": "User cancel favorite Article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "233333",
                        "name": "ArticleID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Delete Favorite Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/articlefavorite/get": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Favorite Manage"
                ],
                "summary": "User like Article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "233333, /articlelike/get?pageno=\u0026pagesize=",
                        "name": "pageno",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "233333, /articlelike/get?pageno=\u0026pagesize=",
                        "name": "pagesize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Create Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ArticleFavoritesInfo"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/articlefavorite/getfavoriteofarticle": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need article id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Favorite Manage"
                ],
                "summary": "User Favorite Article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "233333",
                        "name": "ArticleID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Create Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Not Found or Existed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/articlelike/create/:articleID": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need article id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Like Manage"
                ],
                "summary": "User like Article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "233333",
                        "name": "ArticleID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Create Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/articlelike/delete/:articleID": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need article id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Like Manage"
                ],
                "summary": "User cancel like Article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "233333",
                        "name": "ArticleID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Delete Like Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/articlelike/getlikelist": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Like Manage"
                ],
                "summary": "Get User's Like List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "233333",
                        "name": "articleID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get Like List Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/articletype/all": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Type Manage"
                ],
                "summary": "Get All Article Types",
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get Successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.ArticleType"
                            }
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters / Type has existed",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/articletype/create": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need new article type information, cannot repeat type name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Type Manage"
                ],
                "summary": "Create a new article type by admin user",
                "parameters": [
                    {
                        "description": "New Article Type Information",
                        "name": "ArticleTypeInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ArticleTypeInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Create Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters / Type has existed",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/articletype/remove": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need type name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Type Manage"
                ],
                "summary": "Admin user removes article type",
                "parameters": [
                    {
                        "description": "Type Name",
                        "name": "TypeName",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Remove Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/articletype/update": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need type name \u0026 new description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Type Manage"
                ],
                "summary": "Admin user update article type description",
                "parameters": [
                    {
                        "description": "Type Name",
                        "name": "TypeName",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Description",
                        "name": "Description",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/community/create": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need community name \u0026 description only",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Create a new Community",
                "parameters": [
                    {
                        "description": "Create a new community needs Creator, Name \u0026 Description.",
                        "name": "CommunityInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CommunityInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Create Community Success",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Community already exists",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/community/delete/:id": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need community id only",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Create a new Community",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. No matter whether delete successfully, Return Success",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/community/get": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need page info: PageNO, pageSize only",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Get Communities By Name Fuzzy Match",
                "parameters": [
                    {
                        "description": "Get Communities Info",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CommunityNameFuzzyMatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get Community Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Community"
                            }
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/community/getcommunitiesbycreator": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need page info: username, PageNO, pageSize",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Get Communities By Creator",
                "parameters": [
                    {
                        "description": "Get Communities By Creator",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Community"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get Community Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.NewCommunityInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/community/getcommunityidbymember": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need member name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Get Community IDs By Member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member Name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get Community IDs Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/community/getmember": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need community IDs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Get Members By Community IDs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get Members Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.CommunityMember"
                            }
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/community/getone/:id": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need community ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Get One Community By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get Community Success",
                        "schema": {
                            "$ref": "#/definitions/entity.Community"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/community/getonebyname": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need community Name, page info: PageNO, pageSize",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Get Communities By Name Fuzzy Match",
                "parameters": [
                    {
                        "description": "Community Name Fuzzy Match Info",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CommunityNameFuzzyMatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get Community Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Community"
                            }
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/community/join/:id": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need community ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Join One Community By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Join Community Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Not Found or Existed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/community/leave/:id": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need community ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Join One Community By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Leave Community Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/community/numberofmember/:id": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need community ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Get the Number Of Member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Return an Integer"
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Return 0"
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Return 0"
                    }
                }
            }
        },
        "/community/update": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need community ID \u0026 description only, only by creator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community Manage"
                ],
                "summary": "Update Community Description By ID",
                "parameters": [
                    {
                        "description": "Update Community Description.",
                        "name": "CommunityInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CommunityInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Success",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Not Creator or Not Found",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/delete": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need filename in json",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "Delete User File, only have permission to delete self data",
                "parameters": [
                    {
                        "description": "filename in post request body",
                        "name": "filename",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserFilename"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Delete Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Other",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/download": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need filename in json",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "User Downloads File, only self data for now",
                "parameters": [
                    {
                        "description": "filename in post request body",
                        "name": "filename",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Upload Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or No Enough Space",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/scan": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, only get self files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "Scan User files",
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Scan Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.UserFiles"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/space/info": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "Browse User Space Info",
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Get User Space Info Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.Space"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or User not exists.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/space/update": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need target user and  new capacity in json",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "Expand User Capacity, only admin user can do this",
                "parameters": [
                    {
                        "description": "Username \u0026 New File Total Capacity",
                        "name": "UserNewCapacity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserNewCapacity"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Other",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/upload": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, html file type input element include name attribute with value \"uploadFilename\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "User Uploads files including images, video etc.",
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Upload Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or No Enough Space",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/file/upload/groupavatar/:groupid": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, html file type input element include name attribute with value \"uploadFilename\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "User Uploads avatar about community that he or she creates",
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Upload Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or No Enough Space",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/resources/userfiles/{username}/{filename}": {
            "get": {
                "description": "Static files request, need to claim the username and filename in the url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Resource"
                ],
                "summary": "Request User Files",
                "responses": {}
            }
        },
        "/user/GetUserInfoByUsername": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Get User's Info",
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Search Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.UserInfo"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/admin/delete": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need strings username in post request, need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Admin delete Users, cannot self delete",
                "parameters": [
                    {
                        "description": "username in post request body",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Password Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/admin/register": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "only need strings username \u0026 password \u0026 ForAdmin, need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Register a new Admin User",
                "parameters": [
                    {
                        "description": "Admin User Register only needs Username, Password(encoded by md5) \u0026 ForAdmin with true.",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. User Register Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or User Has Existed",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/follow": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need username who is followed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "User Follow other users",
                "parameters": [
                    {
                        "description": "username in post request body",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Follow Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or User not exist or User has followed.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/followees": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Get User's followees",
                "parameters": [
                    {
                        "description": "username in post request body",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Search Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.UserFollows"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/followers": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Get User's followers",
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Search Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.UserFollows"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/getusersinfo": {
            "get": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Get Users' Info By username, pageNo, pageSize, \"/getusersinfo?username=\u0026pageNo=\u0026pageSize=\"",
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Search Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.UsersInfo"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "only need strings username \u0026 password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Admin / Regular User login",
                "parameters": [
                    {
                        "description": "only needs username and password",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. User Login Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Username / Password incorrect",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need strings username in post request, need token in cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Admin / Regular User logout",
                "parameters": [
                    {
                        "description": "username in post request body",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/user/password": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need Username, Password, NewPassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Admin \u0026 Regular Update Password",
                "parameters": [
                    {
                        "description": "need Username, Password, NewPassword",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Password Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or Password not match",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "only need strings username \u0026 password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Register a new Regular User",
                "parameters": [
                    {
                        "description": "Regular User Register only needs Username, Password(encoded by md5) \u0026 ForAdmin with false.",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. User Register Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or User Has Existed",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/unfollow": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need username who is followed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "User Unfollow other users",
                "parameters": [
                    {
                        "description": "username in post request body",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Unfollow Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters or User not exist.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "post": {
                "security": [
                    {
                        "ApiAuthToken": []
                    }
                ],
                "description": "need token in cookie, need Nickname, Birthday(yyyy-mm-dd), Gender(male / female / unknown), Department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Manage"
                ],
                "summary": "Update user information including Nickname, Birthday(yyyy-mm-dd), Gender(male / female / unknown), Department",
                "parameters": [
                    {
                        "description": "need Nickname, Birthday(yyyy-mm-dd), Gender(male / female / unknown), Department",
                        "name": "NewUserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.NewUserInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "\u003cb\u003eSuccess\u003c/b\u003e. Update Password Successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "400": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Bad Parameters",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    },
                    "500": {
                        "description": "\u003cb\u003eFailure\u003c/b\u003e. Server Internal Error.",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Article": {
            "type": "object",
            "properties": {
                "communityID": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "createDay": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "typeID": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.ArticleComment": {
            "type": "object",
            "properties": {
                "articleID": {
                    "type": "integer"
                },
                "commentID": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "createDay": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.ArticleCommentsInfo": {
            "type": "object",
            "properties": {
                "ArticleComments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ArticleComment"
                    }
                },
                "PageNO": {
                    "type": "integer"
                },
                "PageSize": {
                    "type": "integer"
                },
                "TotalPageNO": {
                    "type": "integer"
                }
            }
        },
        "entity.ArticleDetail": {
            "type": "object",
            "properties": {
                "CommunityName": {
                    "type": "string",
                    "example": "big bang theory"
                },
                "Content": {
                    "type": "string",
                    "example": "I love UF"
                },
                "Favorited": {
                    "type": "boolean"
                },
                "ID": {
                    "type": "integer"
                },
                "Liked": {
                    "type": "boolean"
                },
                "NumComment": {
                    "type": "integer"
                },
                "NumFavorite": {
                    "type": "integer"
                },
                "NumLike": {
                    "type": "integer"
                },
                "Owner": {
                    "type": "string",
                    "example": "Owner1"
                },
                "Title": {
                    "type": "string",
                    "example": "Gator Forum"
                },
                "TypeName": {
                    "type": "string",
                    "example": "music"
                },
                "UpdatedAt": {
                    "type": "string",
                    "example": "2018-01-01"
                }
            }
        },
        "entity.ArticleFavorite": {
            "type": "object",
            "properties": {
                "articleID": {
                    "type": "integer"
                },
                "favoriteDay": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.ArticleFavoritesInfo": {
            "type": "object",
            "properties": {
                "ArticleFavorites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ArticleFavorite"
                    }
                },
                "PageNO": {
                    "type": "integer"
                },
                "PageSize": {
                    "type": "integer"
                },
                "TotalPageNO": {
                    "type": "integer"
                }
            }
        },
        "entity.ArticleInfo": {
            "type": "object",
            "properties": {
                "CommunityID": {
                    "type": "integer"
                },
                "Content": {
                    "type": "string",
                    "example": "I love UF"
                },
                "ID": {
                    "type": "integer"
                },
                "Title": {
                    "type": "string",
                    "example": "Gator Forum"
                },
                "TypeID": {
                    "type": "integer"
                }
            }
        },
        "entity.ArticleOfES": {
            "type": "object",
            "properties": {
                "Content": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                }
            }
        },
        "entity.ArticleSearchInfo": {
            "type": "object",
            "properties": {
                "PageNO": {
                    "type": "integer"
                },
                "PageSize": {
                    "type": "integer"
                },
                "SearchWords": {
                    "type": "string",
                    "example": "Balala Magic Girl"
                }
            }
        },
        "entity.ArticleType": {
            "type": "object",
            "properties": {
                "create_Day": {
                    "type": "string"
                },
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "typeName": {
                    "type": "string"
                }
            }
        },
        "entity.ArticleTypeInfo": {
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string",
                    "example": "Discussion of Movie"
                },
                "TypeName": {
                    "type": "string",
                    "example": "Movie"
                }
            }
        },
        "entity.ArticlesForSearching": {
            "type": "object",
            "properties": {
                "Articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ArticleOfES"
                    }
                },
                "PageNO": {
                    "type": "integer"
                },
                "PageSize": {
                    "type": "integer"
                },
                "TotalPageNO": {
                    "type": "integer"
                }
            }
        },
        "entity.Community": {
            "type": "object",
            "properties": {
                "createDay": {
                    "type": "string"
                },
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.CommunityInfo": {
            "type": "object",
            "properties": {
                "Creator": {
                    "type": "string",
                    "example": "test1"
                },
                "Description": {
                    "type": "string",
                    "example": "this is a test community"
                },
                "Name": {
                    "type": "string",
                    "example": "community1"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "entity.CommunityMember": {
            "type": "object",
            "properties": {
                "communityID": {
                    "type": "integer"
                },
                "joinDay": {
                    "type": "string"
                },
                "member": {
                    "type": "string"
                }
            }
        },
        "entity.CommunityNameFuzzyMatch": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "example": "community1"
                },
                "PageNO": {
                    "type": "integer"
                },
                "PageSize": {
                    "type": "integer"
                }
            }
        },
        "entity.NewCommentInfo": {
            "type": "object",
            "properties": {
                "ArticleID": {
                    "type": "integer"
                },
                "CommentID": {
                    "type": "integer"
                },
                "Content": {
                    "type": "string",
                    "example": "It is true"
                }
            }
        },
        "entity.NewCommunityInfo": {
            "type": "object",
            "properties": {
                "Communities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Community"
                    }
                },
                "NumberOfMember": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "NumberOfPost": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "PageNO": {
                    "type": "integer"
                },
                "PageSize": {
                    "type": "integer"
                }
            }
        },
        "entity.NewUserInfo": {
            "type": "object",
            "properties": {
                "Birthday": {
                    "type": "string",
                    "example": "2022-02-30"
                },
                "Department": {
                    "type": "string",
                    "example": "CS:GO"
                },
                "Gender": {
                    "type": "string",
                    "example": "male/female/unknown"
                },
                "Nickname": {
                    "type": "string",
                    "example": "Peter Park"
                },
                "Username": {
                    "type": "string",
                    "example": "jamesbond21"
                }
            }
        },
        "entity.ResponseMsg": {
            "type": "object",
            "properties": {
                "Nickname": {
                    "type": "string",
                    "example": "James Bond"
                },
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "process successfully"
                },
                "new_community_id": {
                    "type": "integer"
                }
            }
        },
        "entity.SimpleUserInfo": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "example": 21
                },
                "Username": {
                    "type": "string",
                    "example": "jamesbond21"
                }
            }
        },
        "entity.Space": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "used": {
                    "type": "number"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.UserFilename": {
            "type": "object",
            "properties": {
                "Filename": {
                    "type": "string",
                    "example": "gator.jpg"
                }
            }
        },
        "entity.UserFiles": {
            "type": "object",
            "properties": {
                "Filenames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "\"xxx.jpg\"",
                        "\"xxx.png\"",
                        "\"xxx.gif\""
                    ]
                },
                "Nickname": {
                    "type": "string",
                    "example": "James Bond"
                },
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "process successfully"
                },
                "new_community_id": {
                    "type": "integer"
                }
            }
        },
        "entity.UserFollows": {
            "type": "object",
            "properties": {
                "Nickname": {
                    "type": "string",
                    "example": "James Bond"
                },
                "Users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "\"spriderman\"",
                        "\"batman\"",
                        "\"ironman\""
                    ]
                },
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "process successfully"
                },
                "new_community_id": {
                    "type": "integer"
                }
            }
        },
        "entity.UserInfo": {
            "type": "object",
            "properties": {
                "ForAdmin": {
                    "type": "boolean"
                },
                "NewPassword": {
                    "type": "string",
                    "example": "3ecb441b741bcd433288f5557e4b9118"
                },
                "Password": {
                    "type": "string",
                    "example": "f9ae5f68ae1e7f7f3fc06053e9b9b539"
                },
                "Username": {
                    "type": "string",
                    "example": "jamesbond21"
                }
            }
        },
        "entity.UserNewCapacity": {
            "type": "object",
            "properties": {
                "Capacity": {
                    "type": "number"
                },
                "Username": {
                    "type": "string",
                    "example": "boss"
                }
            }
        },
        "entity.UsersInfo": {
            "type": "object",
            "properties": {
                "PageNO": {
                    "type": "integer"
                },
                "PageSize": {
                    "type": "integer"
                },
                "Users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.SimpleUserInfo"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiAuthToken": {
            "type": "apiKey",
            "name": "token",
            "in": "cookies"
        }
    }
}